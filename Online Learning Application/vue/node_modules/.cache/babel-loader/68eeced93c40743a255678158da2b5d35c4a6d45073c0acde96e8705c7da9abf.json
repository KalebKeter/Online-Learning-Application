{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport StudentService from \"../services/StudentService\";\nexport default {\n  name: \"student-enroll\",\n  components: {},\n  props: ['courseId'],\n  data: function data() {\n    return {\n      courses: [],\n      showButton: true,\n      homework: {\n        homeworkId: \"\",\n        courseId: 0,\n        userId: \"\",\n        userName: \"\",\n        userAnswer: \"\",\n        gradedStatus: \"\",\n        instructorComments: \"\"\n      }\n    };\n  },\n  created: function created() {\n    this.getCourses();\n  },\n  computed: {},\n  methods: {\n    find: function find() {\n      this.isDisabled = !this.isDisabled; // Added missing \"this\" keyword\n    },\n    removeCourse: function removeCourse(courses, course) {\n      // Removed unnecessary \"this\" keyword\n      var index = courses.findIndex(function (c) {\n        return c.courseId === course.courseId;\n      }); // Fixed index calculation\n      return courses.splice(index, 1); // Removed unnecessary \"this\" keyword\n    },\n    handleCourseCreated: function handleCourseCreated(courseId) {\n      this.homework.courseId = courseId;\n    },\n    getCourses: function getCourses() {\n      var _this = this;\n      StudentService.getAllCourses().then(function (response) {\n        console.log(response.data);\n        _this.courses = response.data;\n        _this.showButton = false;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    },\n    handleClick: function handleClick(courseId) {\n      var _this2 = this;\n      console.log(\"CourseId: \" + courseId);\n      this.homework.courseId = courseId;\n      console.log(\"Homework obj \" + this.homework.courseId);\n      StudentService.addHomework(this.homework).then(function (response) {\n        if (response.status === 200) {\n          alert(\"You are enrolled!\");\n          _this2.$router.go();\n          var index = _this2.courses.findIndex(function (course) {\n            return course.courseId === courseId;\n          });\n          _this2.courses.splice(index, 1);\n        }\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;AAyBA;AACA;EACAA;EACAC,aAEA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC,WAEA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;QAAA;MAAA;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACAC,+BACAC;QACAC;QACA;QACA;MACA,WACA;QACAA;MACA;IACA;IACAC;MAAA;MACAD;MACA;MACAA;MACAF,0CACAC;QACA;UACAG;UACA;UACA;YAAA;UAAA;UACA;QACA;MACA,WACA;QACAF;MACA;IACA;EACA;AACA","names":["name","components","props","data","courses","showButton","homework","homeworkId","courseId","userId","userName","userAnswer","gradedStatus","instructorComments","created","computed","methods","find","removeCourse","handleCourseCreated","getCourses","StudentService","then","console","handleClick","alert"],"sourceRoot":"src/components","sources":["StudentEnrollCourseCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-enroll\">\r\n    <!-- <button v-if=\"showButton\" type=\"button\" v-on:click=\"getCourses()\"> -->\r\n    <h1>Enroll In Courses</h1>\r\n    <!-- </button> -->\r\n    <div id=\"container\" v-for=\"course in courses\" :key=\"course.courseId\">\r\n      <h2>{{ course.courseName }}</h2>\r\n      <p>Description: {{ course.courseDescription }}</p>\r\n      <p>Price: {{ course.price }}</p>\r\n      <p>Difficulty Level: {{ course.difficultyLevel }}</p>\r\n      <div class=\"button-container\">\r\n        <button\r\n          class=\"enroll\"\r\n          button\r\n          type=\"submit\"\r\n          v-on:click=\"handleClick(course.courseId)\"\r\n        >\r\n          Enroll\r\n        </button>\r\n        <!-- <create-course/> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport StudentService from \"../services/StudentService\";\r\nexport default {\r\n  name: \"student-enroll\",\r\n  components: {\r\n  \r\n  },\r\n  props: ['courseId'],\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      showButton: true,\r\n      homework: {\r\n        homeworkId: \"\",\r\n        courseId: 0,\r\n        userId: \"\",\r\n        userName: \"\",\r\n        userAnswer: \"\",\r\n        gradedStatus: \"\",\r\n        instructorComments: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getCourses();\r\n  },\r\n  computed: {\r\n\r\n  },\r\n  methods: {\r\n    find() {\r\n      this.isDisabled = !this.isDisabled; // Added missing \"this\" keyword\r\n    },\r\n    removeCourse(courses, course) { // Removed unnecessary \"this\" keyword\r\n      const index = courses.findIndex(c => c.courseId === course.courseId); // Fixed index calculation\r\n      return courses.splice(index, 1); // Removed unnecessary \"this\" keyword\r\n    },\r\n    handleCourseCreated(courseId) {\r\n      this.homework.courseId = courseId;\r\n    },\r\n    getCourses() {\r\n      StudentService.getAllCourses()\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.courses = response.data;\r\n          this.showButton = false;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    handleClick(courseId) {\r\n      console.log(\"CourseId: \" + courseId);\r\n      this.homework.courseId = courseId;\r\n      console.log(\"Homework obj \" + this.homework.courseId);\r\n      StudentService.addHomework(this.homework)\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            alert(\"You are enrolled!\");\r\n            this.$router.go();\r\n            const index = this.courses.findIndex(course => course.courseId === courseId);\r\n            this.courses.splice(index, 1);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.card {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n#container {\r\n  background-color: black;\r\n  width: 300px;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  margin-left: 30px;\r\n  flex-direction: row;\r\n}\r\n#container h2 {\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}