{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport InstructorService from \"../services/InstructorService.js\";\nexport default {\n  name: 'create-course',\n  data: function data() {\n    return {\n      course: {\n        courseId: 0,\n        userId: \"\",\n        courseName: \"\",\n        courseDescription: \"\",\n        difficultyLevel: \"\",\n        price: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        lessonName: \"\",\n        reading: \"\",\n        homeworkProblem: \"\"\n      }\n\n      // userId: 1, // Replace with the actual logged-in user ID\n    };\n  },\n\n  methods: {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n      // Set the logged-in user's ID\n      //  this.course.userId = this.userId;\n      // Send form data to backend using CourseService\n      console.log(this.courseId);\n      InstructorService.createCourse(this.course).then(function (response) {\n        if (response.status === 201) {\n          alert(\"SUCCESS: Course Created\");\n          _this.$router.push(\"/\");\n        }\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    }\n  },\n  created: function created() {\n    this.courseId = parseInt(this.$route.params.id);\n    this.$store.commit(\"SET_ACTIVE_COURSE\", this.courseId);\n  }\n};","map":{"version":3,"mappings":";;AA4EA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;;MAEA;IACA;EACA;;EACAC;IACAC;MAAA;MACA;MACA;MACA;MACAC;MACAC,kBACAC,0BACAC;QACA;UACAC;UACA;QACA;MACA,WACA;QACAJ;MACA;IACA;EACA;EACAK;IACA;IACA;EACA;AACA","names":["name","data","course","courseId","userId","courseName","courseDescription","difficultyLevel","price","startDate","endDate","lessonName","reading","homeworkProblem","methods","handleSubmit","console","InstructorService","createCourse","then","alert","created"],"sourceRoot":"src/components","sources":["CreateLesson.vue"],"sourcesContent":["<template>\r\n      <div id=\"form\">\r\n   <form v-on:submit=\"handleSubmit\">\r\n        <h1>Create New Course</h1>\r\n        <div class=\"form-input-group\">\r\n          <label for=\"name\">Course Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"courseName\"\r\n            v-model=\"course.courseName\"\r\n            required\r\n            autofocus\r\n          />\r\n        </div>\r\n        <div class=\"form-input-group\">\r\n          <label for=\"description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"description\"\r\n            v-model=\"course.courseDescription\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-input-group\">\r\n          <label for=\"difficulty\"> Difficulty (1-5) </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"difficulty\"\r\n            v-model=\"course.difficultyLevel\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-input-group\">\r\n          <label for=\"price\">Price</label>\r\n          <input type=\"text\" id=\"price\" v-model=\"course.price\" required />\r\n        </div>\r\n        <div class=\"form-input-group\">\r\n          <label for=\"startdate\">Start Date</label>\r\n          <input type=\"text\" id=\"startdate\" v-model=\"course.startDate\" />\r\n        </div>\r\n         <div class=\"form-input-group\">\r\n          <label for=\"enddate\">End Date</label>\r\n          <input type=\"text\" id=\"enddate\" v-model=\"course.endDate\" />\r\n        </div>\r\n        <h3>Lesson Contents</h3>\r\n        <div class=\"form-input-group\">\r\n    <label for=\"lessonname\">Lesson Name</label>\r\n    <input type=\"text\" id=\"lessonname\" v-model=\"course.lessonName\" required />\r\n    </div>\r\n         <div class=\"form-input-group\">\r\n          <label for=\"reading\">Reading</label>\r\n          <input type=\"text\" id=\"reading\" v-model=\"course.reading\" required />\r\n        </div>\r\n         <div class=\"form-input-group\">\r\n          <label for=\"homework\">Homework Problem</label>\r\n          <input type=\"text\" id=\"homework\" v-model=\"course.homeworkProblem\" required />\r\n        </div>\r\n        <button type=\"submit\">Save</button>\r\n        <!-- <button class=\"create\" type=\"submit\">Create</button>    -->\r\n\r\n         <div class=\"form-input-group\">\r\n          <label for=\"reading\">Reading</label>\r\n          <input type=\"text\" id=\"reading\" v-model=\"course.reading\" required />\r\n        </div>\r\n         <div class=\"form-input-group\">\r\n          <label for=\"homework\">Homework Problem</label>\r\n          <input type=\"text\" id=\"homework\" v-model=\"course.homeworkProblem\" required />\r\n        </div>\r\n       <button type=\"submit\">Save</button>\r\n \r\n      </form>\r\n      </div>\r\n    <!-- </div>\r\n  </div> -->\r\n</template>\r\n<script>\r\nimport InstructorService from \"../services/InstructorService.js\"\r\nexport default {\r\n    name: 'create-course',\r\n  data() {\r\n    return {\r\n      course: {\r\n          courseId: 0,\r\n        userId: \"\",\r\n        courseName: \"\",\r\n        courseDescription: \"\",\r\n        difficultyLevel: \"\",\r\n        price: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        lessonName: \"\",\r\n        reading: \"\",\r\n        homeworkProblem: \"\"\r\n      },\r\n      \r\n      // userId: 1, // Replace with the actual logged-in user ID\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      // Set the logged-in user's ID\r\n      //  this.course.userId = this.userId;\r\n      // Send form data to backend using CourseService\r\n      console.log(this.courseId);\r\n      InstructorService\r\n        .createCourse(this.course)\r\n        .then((response) => {\r\n           if (response.status === 201) {\r\n               alert(\"SUCCESS: Course Created\");\r\n            this.$router.push(\"/\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.courseId = parseInt(this.$route.params.id);\r\n    this.$store.commit(\"SET_ACTIVE_COURSE\", this.courseId);\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}