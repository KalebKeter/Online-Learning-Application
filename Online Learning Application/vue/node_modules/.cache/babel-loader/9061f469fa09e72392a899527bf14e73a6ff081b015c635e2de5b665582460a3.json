{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Login from '../views/Login.vue';\nimport Logout from '../views/Logout.vue';\nimport Register from '../views/Register.vue';\nimport store from '../store/index';\nimport instructor from '../views/Instructor.vue';\nimport student from '../views/StudentView.vue';\nimport instructorlogin from '../views/InstructorLogin.vue';\nimport InstructorRegister from '../views/InstructorRegister.vue';\nimport InstructorCourses from '../views/InstructorCourses.vue';\nimport StudentCourses from '../views/StudentCourses.vue';\nimport StudentLesson from '../views/StudentLesson.vue';\nimport Lesson from '../views/Lesson.vue';\nimport Submitted from '../views/Submitted.vue';\nimport ReportCard from '../views/ReportCard.vue';\nVue.use(Router);\n\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: '/lessons',\n    name: 'lessons',\n    component: Lesson,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: '/courses',\n    name: 'instructor-courses',\n    component: InstructorCourses,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/instructorlogin\",\n    name: \"instructorlogin\",\n    component: instructorlogin,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/logout\",\n    name: \"logout\",\n    component: Logout,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/instructor-register\",\n    name: \"instructor-register\",\n    component: InstructorRegister,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/instructor\",\n    name: \"instructor\",\n    component: instructor,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/student\",\n    name: \"student\",\n    component: student,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/student/courses\",\n    name: \"student-courses\",\n    component: StudentCourses,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/student/lesson\",\n    name: \"student-lesson\",\n    component: StudentLesson,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/submitted\",\n    name: \"submitted\",\n    component: Submitted,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/reportcard\",\n    name: \"reportcard\",\n    component: ReportCard,\n    meta: {\n      requiresAuth: false\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  });\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && store.state.token === '') {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Home","Login","Logout","Register","store","instructor","student","instructorlogin","InstructorRegister","InstructorCourses","StudentCourses","StudentLesson","Lesson","Submitted","ReportCard","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","x","state","token"],"sources":["C:/Users/arabi/Projects/java-finalcapstone-team3/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Logout from '../views/Logout.vue'\r\nimport Register from '../views/Register.vue'\r\nimport store from '../store/index'\r\nimport instructor from '../views/Instructor.vue'\r\nimport student from '../views/StudentView.vue'\r\nimport instructorlogin from '../views/InstructorLogin.vue'\r\nimport InstructorRegister from '../views/InstructorRegister.vue'\r\nimport InstructorCourses from '../views/InstructorCourses.vue'\r\nimport StudentCourses from '../views/StudentCourses.vue'\r\nimport StudentLesson from '../views/StudentLesson.vue'\r\nimport Lesson from '../views/Lesson.vue'\r\nimport Submitted from '../views/Submitted.vue'\r\nimport ReportCard from '../views/ReportCard.vue'\r\n\r\nVue.use(Router)\r\n\r\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n\r\n    \r\n    {\r\n      path: '/lessons',\r\n      name: 'lessons',\r\n      component: Lesson,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n    {\r\n      path: '/courses',\r\n      name: 'instructor-courses',\r\n      component: InstructorCourses,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/instructorlogin\",\r\n      name: \"instructorlogin\",\r\n      component: instructorlogin,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      name: \"login\",\r\n      component: Login,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/logout\",\r\n      name: \"logout\",\r\n      component: Logout,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      name: \"register\",\r\n      component: Register,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/instructor-register\",\r\n      name: \"instructor-register\",\r\n      component: InstructorRegister,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n      {\r\n        path: \"/instructor\",\r\n        name: \"instructor\",\r\n        component: instructor,\r\n        meta: {\r\n          requiresAuth: false\r\n        }\r\n        },\r\n       \r\n        {\r\n          path: \"/student\",\r\n          name: \"student\",\r\n          component: student,\r\n          meta: {\r\n            requiresAuth: false\r\n          }\r\n        }, \r\n\r\n\r\n    \r\n    {\r\n      path: \"/student/courses\",\r\n      name: \"student-courses\",\r\n      component: StudentCourses,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/student/lesson\",\r\n      name: \"student-lesson\",\r\n      component: StudentLesson,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n      \r\n    },\r\n    {\r\n    path: \"/submitted\",\r\n      name: \"submitted\",\r\n      component: Submitted,\r\n      meta: {\r\n        requiresAuth: false\r\n    }\r\n  },\r\n  {\r\n    path: \"/reportcard\",\r\n      name: \"reportcard\",\r\n      component: ReportCard,\r\n      meta: {\r\n        requiresAuth: false\r\n    }\r\n  }\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // Determine if the route requires Authentication\r\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\r\n\r\n  // If it does and they are not logged in, send the user to \"/login\"\r\n  if (requiresAuth && store.state.token === '') {\r\n    next(\"/login\");\r\n  } else {\r\n    // Else let them go to their next destination\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}